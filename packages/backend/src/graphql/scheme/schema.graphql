extend type Query {
  scheme(input: SchemeInput): Scheme
  schemes: [Scheme]
}

extend type Mutation {
  createScheme(input: CreateSchemeInput!): CreateSchemeResponse! @requireAuthentication(isRoot: true)
}

enum SchRoles {
  ADMIN
  VIEWER
}

type SchRoleUser {
  role: SchRoles
  user: User
}

type Scheme {
  id: Int
  name: String
  users: [SchRoleUser]
  channels: [Channel]
  createdAt: String
}

type CreateSchemeResponse implements MutationResponse {
  code: String!
  message: String!
}

input SchemeInput {
  id: Int!
}

input CreateSchemeInput {
  name: String!
}
